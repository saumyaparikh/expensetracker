{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saumy\\\\Desktop\\\\HTML\\\\React example\\\\todo\\\\todo\\\\src\\\\Components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = props => {\n  const chartDataPoint = [{\n    label: \"January\",\n    value: \"0\"\n  }, {\n    label: \"February\",\n    value: \"0\"\n  }, {\n    label: \"March\",\n    value: \"0\"\n  }, {\n    label: \"April\",\n    value: \"0\"\n  }, {\n    label: \"May\",\n    value: \"0\"\n  }, {\n    label: \"June\",\n    value: \"0\"\n  }, {\n    label: \"July\",\n    value: \"0\"\n  }, {\n    label: \"August\",\n    value: \"0\"\n  }, {\n    label: \"September\",\n    value: \"0\"\n  }, {\n    label: \"October\",\n    value: \"0\"\n  }, {\n    label: \"November\",\n    value: \"0\"\n  }, {\n    label: \"December\",\n    value: \"0\"\n  }];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoint[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      dataPoints: chartDataPoint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"sources":["C:/Users/saumy/Desktop/HTML/React example/todo/todo/src/Components/Expenses/ExpensesChart.js"],"names":["React","Chart","ExpensesChart","props","chartDataPoint","label","value","expense","expenses","expenseMonth","date","getMonth","amount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAMC,cAAc,GAAG,CACrB;AAAEC,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GADqB,EAErB;AAAED,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,KAAK,EAAE;AAA5B,GAFqB,EAGrB;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAHqB,EAIrB;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAJqB,EAKrB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GALqB,EAMrB;AAAED,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GANqB,EAOrB;AAAED,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAPqB,EAQrB;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GARqB,EASrB;AAAED,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GATqB,EAUrB;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAVqB,EAWrB;AAAED,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,KAAK,EAAE;AAA5B,GAXqB,EAYrB;AAAED,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,KAAK,EAAE;AAA5B,GAZqB,CAAvB;;AAcA,OAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,QAA5B,EAAsC;AACpC,UAAMC,YAAY,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAArB;AACAP,IAAAA,cAAc,CAACK,YAAD,CAAd,CAA6BH,KAA7B,IAAsCC,OAAO,CAACK,MAA9C;AACD;;AACD,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,UAAU,EAAER;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAxBD;;KAAMF,a;AAyBN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoint = [\r\n    { label: \"January\", value: \"0\" },\r\n    { label: \"February\", value: \"0\" },\r\n    { label: \"March\", value: \"0\" },\r\n    { label: \"April\", value: \"0\" },\r\n    { label: \"May\", value: \"0\" },\r\n    { label: \"June\", value: \"0\" },\r\n    { label: \"July\", value: \"0\" },\r\n    { label: \"August\", value: \"0\" },\r\n    { label: \"September\", value: \"0\" },\r\n    { label: \"October\", value: \"0\" },\r\n    { label: \"November\", value: \"0\" },\r\n    { label: \"December\", value: \"0\" },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoint[expenseMonth].value += expense.amount;\r\n  }\r\n  return (\r\n    <>\r\n      <Chart dataPoints={chartDataPoint} />\r\n    </>\r\n  );\r\n};\r\nexport default ExpensesChart;\r\n"]},"metadata":{},"sourceType":"module"}